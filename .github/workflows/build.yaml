name: BuildFrontEndApp

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
          
    steps:
      - name: CheckoutSrcCode
        uses: actions/checkout@v2

      - name: CheckNode v
        run: node -v

      - name: BuildSrcCode
        run: |
          npm install
          npm run build

      - name: ConnectToAWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ConnectToECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: GetImageTag
        id: image
        run: |
          VERSION=$(echo "${{ github.sha }}" | cut -c1-8)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION"
          echo "::set-output name=version::$VERSION"

      - name: PushImageTag
        id: image-info
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: amazon-eks-frontend-ci
          IMAGE_TAG: ${{ steps.image.outputs.version }}
        run: |
          echo "ecr_repository=$ECR_REPOSITORY" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker image inspect $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
